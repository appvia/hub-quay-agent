// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright (C) 2019  Rohith Jayawardene <gambol99@gmail.com>
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
//

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/appvia/hub-quay-agent/pkg/transport/models"
)

// PutRobotsNamespaceNameOKCode is the HTTP code returned for type PutRobotsNamespaceNameOK
const PutRobotsNamespaceNameOKCode int = 200

/*PutRobotsNamespaceNameOK Returning the status of a robot account

swagger:response putRobotsNamespaceNameOK
*/
type PutRobotsNamespaceNameOK struct {

	/*
	  In: Body
	*/
	Payload *models.Robot `json:"body,omitempty"`
}

// NewPutRobotsNamespaceNameOK creates PutRobotsNamespaceNameOK with default headers values
func NewPutRobotsNamespaceNameOK() *PutRobotsNamespaceNameOK {

	return &PutRobotsNamespaceNameOK{}
}

// WithPayload adds the payload to the put robots namespace name o k response
func (o *PutRobotsNamespaceNameOK) WithPayload(payload *models.Robot) *PutRobotsNamespaceNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put robots namespace name o k response
func (o *PutRobotsNamespaceNameOK) SetPayload(payload *models.Robot) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutRobotsNamespaceNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PutRobotsNamespaceNameDefault A generic erorr returned by the api

swagger:response putRobotsNamespaceNameDefault
*/
type PutRobotsNamespaceNameDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPutRobotsNamespaceNameDefault creates PutRobotsNamespaceNameDefault with default headers values
func NewPutRobotsNamespaceNameDefault(code int) *PutRobotsNamespaceNameDefault {
	if code <= 0 {
		code = 500
	}

	return &PutRobotsNamespaceNameDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put robots namespace name default response
func (o *PutRobotsNamespaceNameDefault) WithStatusCode(code int) *PutRobotsNamespaceNameDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put robots namespace name default response
func (o *PutRobotsNamespaceNameDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put robots namespace name default response
func (o *PutRobotsNamespaceNameDefault) WithPayload(payload *models.APIError) *PutRobotsNamespaceNameDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put robots namespace name default response
func (o *PutRobotsNamespaceNameDefault) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutRobotsNamespaceNameDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
