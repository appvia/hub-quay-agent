// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright (C) 2019  Rohith Jayawardene <gambol99@gmail.com>
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
//

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/appvia/hub-quay-agent/pkg/transport/models"
)

// GetRegistryNamespaceOKCode is the HTTP code returned for type GetRegistryNamespaceOK
const GetRegistryNamespaceOKCode int = 200

/*GetRegistryNamespaceOK A collection repositories found in the registry

swagger:response getRegistryNamespaceOK
*/
type GetRegistryNamespaceOK struct {

	/*
	  In: Body
	*/
	Payload *models.RepositoryList `json:"body,omitempty"`
}

// NewGetRegistryNamespaceOK creates GetRegistryNamespaceOK with default headers values
func NewGetRegistryNamespaceOK() *GetRegistryNamespaceOK {

	return &GetRegistryNamespaceOK{}
}

// WithPayload adds the payload to the get registry namespace o k response
func (o *GetRegistryNamespaceOK) WithPayload(payload *models.RepositoryList) *GetRegistryNamespaceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get registry namespace o k response
func (o *GetRegistryNamespaceOK) SetPayload(payload *models.RepositoryList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRegistryNamespaceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetRegistryNamespaceDefault A generic erorr returned by the api

swagger:response getRegistryNamespaceDefault
*/
type GetRegistryNamespaceDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetRegistryNamespaceDefault creates GetRegistryNamespaceDefault with default headers values
func NewGetRegistryNamespaceDefault(code int) *GetRegistryNamespaceDefault {
	if code <= 0 {
		code = 500
	}

	return &GetRegistryNamespaceDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get registry namespace default response
func (o *GetRegistryNamespaceDefault) WithStatusCode(code int) *GetRegistryNamespaceDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get registry namespace default response
func (o *GetRegistryNamespaceDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get registry namespace default response
func (o *GetRegistryNamespaceDefault) WithPayload(payload *models.APIError) *GetRegistryNamespaceDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get registry namespace default response
func (o *GetRegistryNamespaceDefault) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRegistryNamespaceDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
