// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright (C) 2019  Rohith Jayawardene <gambol99@gmail.com>
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
//

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteRegistryNamespaceNameHandlerFunc turns a function with the right signature into a delete registry namespace name handler
type DeleteRegistryNamespaceNameHandlerFunc func(DeleteRegistryNamespaceNameParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteRegistryNamespaceNameHandlerFunc) Handle(params DeleteRegistryNamespaceNameParams) middleware.Responder {
	return fn(params)
}

// DeleteRegistryNamespaceNameHandler interface for that can handle valid delete registry namespace name params
type DeleteRegistryNamespaceNameHandler interface {
	Handle(DeleteRegistryNamespaceNameParams) middleware.Responder
}

// NewDeleteRegistryNamespaceName creates a new http.Handler for the delete registry namespace name operation
func NewDeleteRegistryNamespaceName(ctx *middleware.Context, handler DeleteRegistryNamespaceNameHandler) *DeleteRegistryNamespaceName {
	return &DeleteRegistryNamespaceName{Context: ctx, Handler: handler}
}

/*DeleteRegistryNamespaceName swagger:route DELETE /registry/{namespace}/{name} deleteRegistryNamespaceName

Responsible for deleting a repository

Deletes the repository, the associated user policy and all images associated


*/
type DeleteRegistryNamespaceName struct {
	Context *middleware.Context
	Handler DeleteRegistryNamespaceNameHandler
}

func (o *DeleteRegistryNamespaceName) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteRegistryNamespaceNameParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
